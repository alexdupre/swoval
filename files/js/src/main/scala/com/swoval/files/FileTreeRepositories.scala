// Do not edit this file manually. It is autogenerated.

package com.swoval.files

import com.swoval.files.FileTreeDataViews.Converter
import com.swoval.files.FileTreeViews.Observer
import com.swoval.files.PathWatchers.Event
import java.io.IOException

object FileTreeRepositories {

  /**
   * Create a file tree repository.
   *
   * @param converter converts a path to the cached value type T
   * @tparam T the value type of the cache entries
   * @return a file tree repository.
   */
  def get[T <: AnyRef](converter: Converter[T]): FileTreeRepository[T] = {
    val symlinkWatcher: SymlinkWatcher = new SymlinkWatcher(
      PathWatchers.get(new DirectoryRegistryImpl()))
    val callbackExecutor: Executor =
      Executor.make("FileTreeRepository-callback-executor")
    val tree: FileCacheDirectoryTree[T] =
      new FileCacheDirectoryTree[T](converter, callbackExecutor, symlinkWatcher)
    val pathWatcher: PathWatcher[PathWatchers.Event] =
      PathWatchers.get(tree.readOnlyDirectoryRegistry())
    pathWatcher.addObserver(new Observer[Event]() {
      override def onError(t: Throwable): Unit = {}

      override def onNext(event: Event): Unit = {
        tree.handleEvent(event)
      }
    })
    val watcher: FileCachePathWatcher[T] =
      new FileCachePathWatcher[T](tree, pathWatcher)
    new FileTreeRepositoryImpl(tree, watcher)
  }

}
